package com.e3.search.dao;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.solr.client.solrj.SolrQuery;
import org.apache.solr.client.solrj.SolrServer;
import org.apache.solr.client.solrj.SolrServerException;
import org.apache.solr.client.solrj.response.QueryResponse;
import org.apache.solr.common.SolrDocument;
import org.apache.solr.common.SolrDocumentList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.e3.bean.SearchItem;
import com.e3.bean.SearchResult;

@Component
public class SearchDao {
	@Autowired
	private SolrServer solrServer;
	public SearchResult searchItemByquery(SolrQuery query){
		SearchResult result = new SearchResult();
		QueryResponse response;
		try {
			response = solrServer.query(query);
			SolrDocumentList list = response.getResults();
			long numFound = list.getNumFound();
			result.setRecourdCount(numFound);
			List<SearchItem> rows = new ArrayList<SearchItem>();
			for (SolrDocument solrDocument : list) {
				SearchItem item = new SearchItem();
				item.setId((String)solrDocument.get("id"));
				item.setPrice((long)solrDocument.get("item_price"));
				item.setSell_point((String)solrDocument.get("sell_point"));
				item.setCategory_name((String)solrDocument.get("category_name"));
				item.setImage((String)solrDocument.get("item_image"));
				String itemTitle="";
				Map<String, Map<String, List<String>>> highlighting = response.getHighlighting();
				List<String> list2 = highlighting.get(solrDocument.get("id")).get("item_title");
				if(list2!=null&&list2.size()>0){
					itemTitle =list2.get(0);
				}else{
					itemTitle= (String) solrDocument.get("item_title");
				}
				item.setTitle(itemTitle);
				rows.add(item);
			}
			result.setItemList(rows);
			
		} catch (SolrServerException e) {
			e.printStackTrace();
		}
		
		return result;
	};
}
